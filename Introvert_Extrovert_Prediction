{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "db7bdd62",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:29.960322Z",
     "iopub.status.busy": "2025-07-23T08:15:29.960019Z",
     "iopub.status.idle": "2025-07-23T08:15:31.803759Z",
     "shell.execute_reply": "2025-07-23T08:15:31.802893Z"
    },
    "papermill": {
     "duration": 1.85176,
     "end_time": "2025-07-23T08:15:31.805364",
     "exception": false,
     "start_time": "2025-07-23T08:15:29.953604",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s5e7/sample_submission.csv\n",
      "/kaggle/input/playground-series-s5e7/train.csv\n",
      "/kaggle/input/playground-series-s5e7/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ffb60e93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:31.816170Z",
     "iopub.status.busy": "2025-07-23T08:15:31.815666Z",
     "iopub.status.idle": "2025-07-23T08:15:31.873795Z",
     "shell.execute_reply": "2025-07-23T08:15:31.872832Z"
    },
    "papermill": {
     "duration": 0.065248,
     "end_time": "2025-07-23T08:15:31.875426",
     "exception": false,
     "start_time": "2025-07-23T08:15:31.810178",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data = pd.read_csv('/kaggle/input/playground-series-s5e7/train.csv')\n",
    "test_data = pd.read_csv('/kaggle/input/playground-series-s5e7/test.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a3020b3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:31.885863Z",
     "iopub.status.busy": "2025-07-23T08:15:31.885551Z",
     "iopub.status.idle": "2025-07-23T08:15:31.920371Z",
     "shell.execute_reply": "2025-07-23T08:15:31.919526Z"
    },
    "papermill": {
     "duration": 0.041807,
     "end_time": "2025-07-23T08:15:31.921866",
     "exception": false,
     "start_time": "2025-07-23T08:15:31.880059",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.series.Series'>\n",
      "RangeIndex: 18524 entries, 0 to 18523\n",
      "Series name: Personality\n",
      "Non-Null Count  Dtype\n",
      "--------------  -----\n",
      "18524 non-null  int64\n",
      "dtypes: int64(1)\n",
      "memory usage: 144.8 KB\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_13/3786157471.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
      "  train_data['Personality'] = train_data['Personality'].replace({'Extrovert': 1, 'Introvert': 0})\n"
     ]
    }
   ],
   "source": [
    "train_data['Personality'] = train_data['Personality'].replace({'Extrovert': 1, 'Introvert': 0})\n",
    "y = train_data.pop('Personality')\n",
    "y.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bef64bd6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:31.932359Z",
     "iopub.status.busy": "2025-07-23T08:15:31.932071Z",
     "iopub.status.idle": "2025-07-23T08:15:31.945254Z",
     "shell.execute_reply": "2025-07-23T08:15:31.944323Z"
    },
    "papermill": {
     "duration": 0.020258,
     "end_time": "2025-07-23T08:15:31.946890",
     "exception": false,
     "start_time": "2025-07-23T08:15:31.926632",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 18524 entries, 0 to 18523\n",
      "Data columns (total 8 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   id                         18524 non-null  int64  \n",
      " 1   Time_spent_Alone           17334 non-null  float64\n",
      " 2   Stage_fear                 16631 non-null  object \n",
      " 3   Social_event_attendance    17344 non-null  float64\n",
      " 4   Going_outside              17058 non-null  float64\n",
      " 5   Drained_after_socializing  17375 non-null  object \n",
      " 6   Friends_circle_size        17470 non-null  float64\n",
      " 7   Post_frequency             17260 non-null  float64\n",
      "dtypes: float64(5), int64(1), object(2)\n",
      "memory usage: 1.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# train_data = train_data.dropna()\n",
    "train_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b8fbddca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:31.957499Z",
     "iopub.status.busy": "2025-07-23T08:15:31.957174Z",
     "iopub.status.idle": "2025-07-23T08:15:31.964183Z",
     "shell.execute_reply": "2025-07-23T08:15:31.963360Z"
    },
    "papermill": {
     "duration": 0.013992,
     "end_time": "2025-07-23T08:15:31.965600",
     "exception": false,
     "start_time": "2025-07-23T08:15:31.951608",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Stage_fear', 'Drained_after_socializing']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s = (train_data.dtypes=='object')\n",
    "obj_cols = list(s[s].index)\n",
    "\n",
    "obj_cols"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "44e58d80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:31.976388Z",
     "iopub.status.busy": "2025-07-23T08:15:31.976081Z",
     "iopub.status.idle": "2025-07-23T08:15:33.479476Z",
     "shell.execute_reply": "2025-07-23T08:15:33.478245Z"
    },
    "papermill": {
     "duration": 1.511013,
     "end_time": "2025-07-23T08:15:33.481325",
     "exception": false,
     "start_time": "2025-07-23T08:15:31.970312",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import OrdinalEncoder\n",
    "\n",
    "encoder = OrdinalEncoder()\n",
    "\n",
    "encoded_train_data = train_data.copy()\n",
    "encoded_test_data = test_data.copy()\n",
    "\n",
    "encoded_train_data[obj_cols] = encoder.fit_transform(train_data[obj_cols])\n",
    "\n",
    "encoded_test_data[obj_cols] = encoder.transform(test_data[obj_cols])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "700d44d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.492406Z",
     "iopub.status.busy": "2025-07-23T08:15:33.491963Z",
     "iopub.status.idle": "2025-07-23T08:15:33.501968Z",
     "shell.execute_reply": "2025-07-23T08:15:33.500844Z"
    },
    "papermill": {
     "duration": 0.017174,
     "end_time": "2025-07-23T08:15:33.503377",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.486203",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The missing columns are ['Time_spent_Alone', 'Stage_fear', 'Social_event_attendance', 'Going_outside', 'Drained_after_socializing', 'Friends_circle_size', 'Post_frequency']\n"
     ]
    }
   ],
   "source": [
    "col_missing= [col for col in train_data.columns if train_data[col].isnull().any()]\n",
    "print(f\"The missing columns are {col_missing}\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f1f6a2f",
   "metadata": {
    "papermill": {
     "duration": 0.00526,
     "end_time": "2025-07-23T08:15:33.513446",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.508186",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "24b93283",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.524343Z",
     "iopub.status.busy": "2025-07-23T08:15:33.523957Z",
     "iopub.status.idle": "2025-07-23T08:15:33.885874Z",
     "shell.execute_reply": "2025-07-23T08:15:33.885086Z"
    },
    "papermill": {
     "duration": 0.369281,
     "end_time": "2025-07-23T08:15:33.887437",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.518156",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.impute import SimpleImputer\n",
    "\n",
    "impute = SimpleImputer(strategy=\"mean\")\n",
    "imputed_train_data = pd.DataFrame(impute.fit_transform(encoded_train_data))\n",
    "imputed_test_data = pd.DataFrame(impute.transform(encoded_test_data))\n",
    "\n",
    "imputed_train_data.columns = train_data.columns\n",
    "imputed_test_data.columns = test_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8e5f4a9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.899272Z",
     "iopub.status.busy": "2025-07-23T08:15:33.898613Z",
     "iopub.status.idle": "2025-07-23T08:15:33.909749Z",
     "shell.execute_reply": "2025-07-23T08:15:33.908781Z"
    },
    "papermill": {
     "duration": 0.018872,
     "end_time": "2025-07-23T08:15:33.911193",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.892321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 18524 entries, 0 to 18523\n",
      "Data columns (total 8 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   id                         18524 non-null  float64\n",
      " 1   Time_spent_Alone           18524 non-null  float64\n",
      " 2   Stage_fear                 18524 non-null  float64\n",
      " 3   Social_event_attendance    18524 non-null  float64\n",
      " 4   Going_outside              18524 non-null  float64\n",
      " 5   Drained_after_socializing  18524 non-null  float64\n",
      " 6   Friends_circle_size        18524 non-null  float64\n",
      " 7   Post_frequency             18524 non-null  float64\n",
      "dtypes: float64(8)\n",
      "memory usage: 1.1 MB\n"
     ]
    }
   ],
   "source": [
    "imputed_train_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4dae88a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.922225Z",
     "iopub.status.busy": "2025-07-23T08:15:33.921938Z",
     "iopub.status.idle": "2025-07-23T08:15:33.929095Z",
     "shell.execute_reply": "2025-07-23T08:15:33.928343Z"
    },
    "papermill": {
     "duration": 0.014217,
     "end_time": "2025-07-23T08:15:33.930458",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.916241",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.nunique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "92cc891a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.941997Z",
     "iopub.status.busy": "2025-07-23T08:15:33.941284Z",
     "iopub.status.idle": "2025-07-23T08:15:33.947338Z",
     "shell.execute_reply": "2025-07-23T08:15:33.946578Z"
    },
    "papermill": {
     "duration": 0.013138,
     "end_time": "2025-07-23T08:15:33.948649",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.935511",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1\n",
       "1    1\n",
       "2    0\n",
       "3    1\n",
       "4    1\n",
       "Name: Personality, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3316e5c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.960193Z",
     "iopub.status.busy": "2025-07-23T08:15:33.959539Z",
     "iopub.status.idle": "2025-07-23T08:15:33.969761Z",
     "shell.execute_reply": "2025-07-23T08:15:33.968782Z"
    },
    "papermill": {
     "duration": 0.017386,
     "end_time": "2025-07-23T08:15:33.971046",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.953660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(16671, 8)\n",
      "(1853, 8)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "trainX,valX,trainY,valY = train_test_split(imputed_train_data,y,train_size=0.9,random_state=2)\n",
    "\n",
    "print(trainX.shape)\n",
    "print(valX.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b1b4be36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:33.982433Z",
     "iopub.status.busy": "2025-07-23T08:15:33.981793Z",
     "iopub.status.idle": "2025-07-23T08:15:34.004856Z",
     "shell.execute_reply": "2025-07-23T08:15:34.003892Z"
    },
    "papermill": {
     "duration": 0.030281,
     "end_time": "2025-07-23T08:15:34.006335",
     "exception": false,
     "start_time": "2025-07-23T08:15:33.976054",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Time_spent_Alone</th>\n",
       "      <th>Stage_fear</th>\n",
       "      <th>Social_event_attendance</th>\n",
       "      <th>Going_outside</th>\n",
       "      <th>Drained_after_socializing</th>\n",
       "      <th>Friends_circle_size</th>\n",
       "      <th>Post_frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.0</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.0</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.233784</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.0</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>13.0</td>\n",
       "      <td>4.982097</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    id  Time_spent_Alone  Stage_fear  Social_event_attendance  Going_outside  \\\n",
       "0  0.0               0.0         0.0                      6.0            4.0   \n",
       "1  1.0               1.0         0.0                      7.0            3.0   \n",
       "2  2.0               6.0         1.0                      1.0            0.0   \n",
       "3  3.0               3.0         0.0                      7.0            3.0   \n",
       "4  4.0               1.0         0.0                      4.0            4.0   \n",
       "\n",
       "   Drained_after_socializing  Friends_circle_size  Post_frequency  \n",
       "0                   0.000000                 15.0        5.000000  \n",
       "1                   0.000000                 10.0        8.000000  \n",
       "2                   0.233784                  3.0        0.000000  \n",
       "3                   0.000000                 11.0        5.000000  \n",
       "4                   0.000000                 13.0        4.982097  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "imputed_train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5f37484c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:34.018015Z",
     "iopub.status.busy": "2025-07-23T08:15:34.017735Z",
     "iopub.status.idle": "2025-07-23T08:15:34.376298Z",
     "shell.execute_reply": "2025-07-23T08:15:34.375522Z"
    },
    "papermill": {
     "duration": 0.366095,
     "end_time": "2025-07-23T08:15:34.377820",
     "exception": false,
     "start_time": "2025-07-23T08:15:34.011725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from xgboost import XGBClassifier\n",
    "\n",
    "model = XGBClassifier()\n",
    "\n",
    "# n_estimators=1000,max_depth=5,learning_rate=0.04,random_state=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b321821b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:34.389286Z",
     "iopub.status.busy": "2025-07-23T08:15:34.388953Z",
     "iopub.status.idle": "2025-07-23T08:15:57.439323Z",
     "shell.execute_reply": "2025-07-23T08:15:57.438377Z"
    },
    "papermill": {
     "duration": 23.058002,
     "end_time": "2025-07-23T08:15:57.441022",
     "exception": false,
     "start_time": "2025-07-23T08:15:34.383020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Testing Accuracy')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "scores =[]\n",
    "for k in range(100, 2000,100):\n",
    "    rfc = XGBClassifier(n_estimators=k,use_label_encoder=False, eval_metric='logloss')\n",
    "    rfc.fit(trainX, trainY)\n",
    "    y_pred = rfc.predict(valX)\n",
    "    scores.append(accuracy_score(valY, y_pred))\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "# plot the relationship between K and testing accuracy\n",
    "# plt.plot(x_axis, y_axis)\n",
    "plt.plot(range(100, 2000, 100), scores)\n",
    "plt.xlabel('Value of n_estimators for Random Forest Classifier')\n",
    "plt.ylabel('Testing Accuracy')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ffdd1e73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:15:57.454142Z",
     "iopub.status.busy": "2025-07-23T08:15:57.453853Z",
     "iopub.status.idle": "2025-07-23T08:16:01.283603Z",
     "shell.execute_reply": "2025-07-23T08:16:01.282578Z"
    },
    "papermill": {
     "duration": 3.838096,
     "end_time": "2025-07-23T08:16:01.285151",
     "exception": false,
     "start_time": "2025-07-23T08:15:57.447055",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Testing Accuracy')"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "scores =[]\n",
    "for k in range(1, 20):\n",
    "    rfc = XGBClassifier(n_estimators=100,max_depth=k,use_label_encoder=False, eval_metric='logloss')\n",
    "    rfc.fit(trainX, trainY)\n",
    "    y_pred = rfc.predict(valX)\n",
    "    scores.append(accuracy_score(valY, y_pred))\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "# plot the relationship between K and testing accuracy\n",
    "# plt.plot(x_axis, y_axis)\n",
    "plt.plot(range(1, 20), scores)\n",
    "plt.xlabel('Value of max_depth for Random Forest Classifier')\n",
    "plt.ylabel('Testing Accuracy')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5ce89521",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:01.299784Z",
     "iopub.status.busy": "2025-07-23T08:16:01.299215Z",
     "iopub.status.idle": "2025-07-23T08:16:13.477924Z",
     "shell.execute_reply": "2025-07-23T08:16:13.477034Z"
    },
    "papermill": {
     "duration": 12.187621,
     "end_time": "2025-07-23T08:16:13.479459",
     "exception": false,
     "start_time": "2025-07-23T08:16:01.291838",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "from xgboost import XGBClassifier\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "scores = []\n",
    "learning_rates = np.arange(0.01, 1.01, 0.01)  # Avoid 0 as learning_rate\n",
    "\n",
    "for lr in learning_rates:\n",
    "    model = XGBClassifier(n_estimators=100, max_depth=4, learning_rate=lr, use_label_encoder=False, eval_metric='logloss')\n",
    "    model.fit(trainX, trainY)\n",
    "    y_pred = model.predict(valX)\n",
    "    acc = accuracy_score(valY, y_pred)\n",
    "    scores.append(acc)\n",
    "\n",
    "# Plotting\n",
    "plt.figure(figsize=(8, 5))\n",
    "plt.plot(learning_rates, scores, marker='o', linestyle='--', color='b')\n",
    "plt.xlabel('Learning Rate')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.title('Effect of Learning Rate on Accuracy')\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0ea94f27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.496042Z",
     "iopub.status.busy": "2025-07-23T08:16:13.495713Z",
     "iopub.status.idle": "2025-07-23T08:16:13.605155Z",
     "shell.execute_reply": "2025-07-23T08:16:13.604198Z"
    },
    "papermill": {
     "duration": 0.11954,
     "end_time": "2025-07-23T08:16:13.606813",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.487273",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric='logloss',\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = XGBClassifier(n_estimators=100,max_depth=4,learning_rate= 0.2,use_label_encoder=False, eval_metric='logloss')\n",
    "model.fit(trainX,trainY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0b9c8e52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.624298Z",
     "iopub.status.busy": "2025-07-23T08:16:13.623674Z",
     "iopub.status.idle": "2025-07-23T08:16:13.631626Z",
     "shell.execute_reply": "2025-07-23T08:16:13.630920Z"
    },
    "papermill": {
     "duration": 0.018246,
     "end_time": "2025-07-23T08:16:13.633283",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.615037",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "pred = model.predict(valX)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6207e877",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.650664Z",
     "iopub.status.busy": "2025-07-23T08:16:13.650333Z",
     "iopub.status.idle": "2025-07-23T08:16:13.659404Z",
     "shell.execute_reply": "2025-07-23T08:16:13.658599Z"
    },
    "papermill": {
     "duration": 0.019427,
     "end_time": "2025-07-23T08:16:13.660894",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.641467",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "percentage aabsolute error: 2.9681597409606044\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "97.0318402590394"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "e=mean_absolute_error(valY,pred)\n",
    "print(f\"percentage aabsolute error: {e*100}\")\n",
    "accuracy_score(valY,pred)*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2343ff17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.677936Z",
     "iopub.status.busy": "2025-07-23T08:16:13.677654Z",
     "iopub.status.idle": "2025-07-23T08:16:13.781585Z",
     "shell.execute_reply": "2025-07-23T08:16:13.780570Z"
    },
    "papermill": {
     "duration": 0.114258,
     "end_time": "2025-07-23T08:16:13.783203",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.668945",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric=&#x27;logloss&#x27;,\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, device=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric='logloss',\n",
       "              feature_types=None, gamma=None, grow_policy=None,\n",
       "              importance_type=None, interaction_constraints=None,\n",
       "              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=4,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, multi_strategy=None, n_estimators=100,\n",
       "              n_jobs=None, num_parallel_tree=None, random_state=None, ...)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(imputed_train_data,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4f87d5be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.800984Z",
     "iopub.status.busy": "2025-07-23T08:16:13.800666Z",
     "iopub.status.idle": "2025-07-23T08:16:13.811054Z",
     "shell.execute_reply": "2025-07-23T08:16:13.810414Z"
    },
    "papermill": {
     "duration": 0.021145,
     "end_time": "2025-07-23T08:16:13.812704",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.791559",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "prediction = model.predict(imputed_test_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2f812033",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.832022Z",
     "iopub.status.busy": "2025-07-23T08:16:13.831343Z",
     "iopub.status.idle": "2025-07-23T08:16:13.835956Z",
     "shell.execute_reply": "2025-07-23T08:16:13.835206Z"
    },
    "papermill": {
     "duration": 0.016233,
     "end_time": "2025-07-23T08:16:13.837316",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.821083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "prediction_labels = np.where(prediction == 1, 'Extrovert', 'Introvert')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4e67c171",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.854992Z",
     "iopub.status.busy": "2025-07-23T08:16:13.854658Z",
     "iopub.status.idle": "2025-07-23T08:16:13.874647Z",
     "shell.execute_reply": "2025-07-23T08:16:13.873746Z"
    },
    "papermill": {
     "duration": 0.030876,
     "end_time": "2025-07-23T08:16:13.876328",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.845452",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "output = pd.DataFrame({'id': test_data['id'],\n",
    "                       'Personality': (prediction_labels)})\n",
    "output.to_csv('submission.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "83070b06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-23T08:16:13.893879Z",
     "iopub.status.busy": "2025-07-23T08:16:13.893582Z",
     "iopub.status.idle": "2025-07-23T08:16:13.904753Z",
     "shell.execute_reply": "2025-07-23T08:16:13.903849Z"
    },
    "papermill": {
     "duration": 0.021563,
     "end_time": "2025-07-23T08:16:13.906185",
     "exception": false,
     "start_time": "2025-07-23T08:16:13.884622",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>Personality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18524</td>\n",
       "      <td>Extrovert</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18525</td>\n",
       "      <td>Introvert</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18526</td>\n",
       "      <td>Extrovert</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>18527</td>\n",
       "      <td>Extrovert</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18528</td>\n",
       "      <td>Introvert</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id Personality\n",
       "0  18524   Extrovert\n",
       "1  18525   Introvert\n",
       "2  18526   Extrovert\n",
       "3  18527   Extrovert\n",
       "4  18528   Introvert"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"submission.csv\")\n",
    "df.head()"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 12738969,
     "sourceId": 91718,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 49.323838,
   "end_time": "2025-07-23T08:16:14.633734",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-23T08:15:25.309896",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
